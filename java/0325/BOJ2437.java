/*
저울 성공출처분류
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
1 초	128 MB	9036	3445	2756	37.573%
문제
하나의 양팔 저울을 이용하여 물건의 무게를 측정하려고 한다. 이 저울의 양 팔의 끝에는 물건이나 추를 올려놓는 접시가 달려 있고, 양팔의 길이는 같다. 또한, 저울의 한쪽에는 저울추들만 놓을 수 있고, 다른 쪽에는 무게를 측정하려는 물건만 올려놓을 수 있다.



무게가 양의 정수인 N개의 저울추가 주어질 때, 이 추들을 사용하여 측정할 수 없는 양의 정수 무게 중 최솟값을 구하는 프로그램을 작성하시오.

예를 들어, 무게가 각각 3, 1, 6, 2, 7, 30, 1인 7개의 저울추가 주어졌을 때, 이 추들로 측정할 수 없는 양의 정수 무게 중 최솟값은 21이다. 

입력
첫 째 줄에는 저울추의 개수를 나타내는 양의 정수 N이 주어진다. N은 1 이상 1,000 이하이다. 둘째 줄에는 저울추의 무게를 나타내는 N개의 양의 정수가 빈칸을 사이에 두고 주어진다. 각 추의 무게는 1이상 1,000,000 이하이다.

출력
첫째 줄에 주어진 추들로 측정할 수 없는 양의 정수 무게 중 최솟값을 출력한다.

예제 입력 1 
7
3 1 6 2 7 30 1
예제 출력 1 
21
*/

// 풀이
import java.util.*;
import java.io.IOException; 
public class Main {	
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		
		int num[] = new int[N];
		for(int i=0; i<N; i++)
			num[i] = sc.nextInt();
		
    // 작은 숫자부터 만들 수 있는 숫자를 하나씩 보인다.
    // 기준 시간까지 무게의 합보다 다음 무게가 큰 경우 그 사이가 비는데, 비는 사이의 무게를 만들 방법이 없다.
    // 따라서 비는 무게에서 가장 작은 값이 최소의 무게가 되는데, 이 무게는 합+1이 될 것이다.
    //ex) 1 2 5 6인 경우 1, 2의무게의 합 3보다 5가 크기 때문에 (4)
    //ex) 1 2 3 7인 경우 1, 2, 3, 7 모두 서로 만들수 있기에 모든 무게의 합 (13)....
		Arrays.sort(num);
		int ans;
		int sum = num[0];
		
		for(int i=1; i<N; i++)
		{
			if(sum+1 < num[i])
				break;
			
			sum += num[i];
		}
		
		ans = sum+1;
        // 단, 처음 무게가 1보다 큰 경우 1을 만들 수 없다.
        if(num[0] > 1)
            ans = 1;
		
		System.out.println(ans);
		
		
	}

}
	
