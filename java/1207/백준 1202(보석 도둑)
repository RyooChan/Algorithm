import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;
public class Main {	
	public static void main(String[] args) throws Exception  {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());
		
		int gem[][] = new int[N][2];
		int bag[] = new int[K];
		long ans = 0;
		PriorityQueue<Integer> gemval = new PriorityQueue<>(Comparator.reverseOrder());

		for(int i=0; i<N; i++) {
			st =  new StringTokenizer(br.readLine());
			gem[i][0] = Integer.parseInt(st.nextToken());;
			gem[i][1] = Integer.parseInt(st.nextToken());;
		}
		
		for(int i=0; i<K; i++)
			bag[i] = Integer.parseInt(br.readLine());

		Arrays.sort(gem, Comparator.comparingInt(o1 -> o1[0]));
				
		Arrays.sort(bag);
		int adder = 0;
		
		for(int i : bag)
		{
			while(adder < N && (gem[adder][0] <= i))
			{
				gemval.offer(gem[adder++][1]);
			}
				if(!gemval.isEmpty())
					ans += gemval.poll();
		}
		
		

		 
        bw.write(ans + "\n");
        bw.flush();
        bw.close();
        br.close();
		
	}

}
	
