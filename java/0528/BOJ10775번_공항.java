/*
공항 성공출처다국어분류
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
1 초	256 MB	8160	3063	2212	37.916%
문제
오늘은 신승원의 생일이다.

박승원은 생일을 맞아 신승원에게 인천국제공항을 선물로 줬다.

공항에는 G개의 게이트가 있으며 각각은 1에서 G까지의 번호를 가지고 있다.

공항에는 P개의 비행기가 순서대로 도착할 예정이며, 당신은 i번째 비행기를 1번부터 gi (1 ≤ gi ≤ G) 번째 게이트중 하나에 영구적으로 도킹하려 한다. 비행기가 어느 게이트에도 도킹할 수 없다면 공항이 폐쇄되고, 이후 어떤 비행기도 도착할 수 없다.

신승원은 가장 많은 비행기를 공항에 도킹시켜서 박승원을 행복하게 하고 싶어한다. 승원이는 비행기를 최대 몇 대 도킹시킬 수 있는가?

입력
첫 번째 줄에는 게이트의 수 G (1 ≤ G ≤ 105)가 주어진다.

두 번째 줄에는 비행기의 수 P (1 ≤ P ≤ 105)가 주어진다.

이후 P개의 줄에 gi (1 ≤ gi ≤ G) 가 주어진다.

출력
승원이가 도킹시킬 수 있는 최대의 비행기 수를 출력한다.

예제 입력 1 
4
3
4
1
1
예제 출력 1 
2
예제 입력 2 
4
6
2
2
3
3
4
4
예제 출력 2 
3
*/

// 풀이
import java.util.*;

public class Main {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        // 도킹가능한 영역, 비행기 수 입력
        int G = sc.nextInt();
        int P = sc.nextInt();
        // 전체 자리, 도킹가능 자리이고 기본 false
        boolean accu[] = new boolean[G];
        // 공항 폐쇄 여부 -> 뒤에 더 도킹 불가능
        boolean closure = true;
        // 정답
        int ans = 0;
        
        // 전체 비행기의 수만큼 진행한다.
        for(int i=0; i<P; i++){
            // 다음 도착 비행기 확인
            int loc = sc.nextInt();
            // 이게 못대면 그냥 폐쇄됨
            closure = true;
            // 비행기 위치부터 처음까지 봐서 자리 있으면 대고 자리를 늘려준다.
            // 뒤에서부터 진행하는 이유는 뒤에 더 작은 숫자가 나올 경우를 대비하기 위함, 큰 숫자에 대면 최대 경우를 확인 가능하다.
            for(int j=loc-1; j>=0; j--){
                // 자리에 댄게 없으면
                if(!accu[j]){
                    // 비행이 도킹이 가능하니 폐쇄x
                    closure = false;
                    // 비행기가 해당 위치(맨 뒤)에 도킹
                    accu[j] = true;
                    // 
                    ans++;
                    break;
                } 
            }
            if(closure) break;
        }
    
      System.out.println(ans);
    }
}
