/*
로프 분류
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
2 초	192 MB	24566	10524	8590	42.802%
문제
N(1 ≤ N ≤ 100,000)개의 로프가 있다. 이 로프를 이용하여 이런 저런 물체를 들어올릴 수 있다. 각각의 로프는 그 굵기나 길이가 다르기 때문에 들 수 있는 물체의 중량이 서로 다를 수도 있다.

하지만 여러 개의 로프를 병렬로 연결하면 각각의 로프에 걸리는 중량을 나눌 수 있다. k개의 로프를 사용하여 중량이 w인 물체를 들어올릴 때, 각각의 로프에는 모두 고르게 w/k 만큼의 중량이 걸리게 된다.

각 로프들에 대한 정보가 주어졌을 때, 이 로프들을 이용하여 들어올릴 수 있는 물체의 최대 중량을 구해내는 프로그램을 작성하시오. 모든 로프를 사용해야 할 필요는 없으며, 임의로 몇 개의 로프를 골라서 사용해도 된다.

입력
첫째 줄에 정수 N이 주어진다. 다음 N개의 줄에는 각 로프가 버틸 수 있는 최대 중량이 주어진다. 이 값은 10,000을 넘지 않는 자연수이다.

출력
첫째 줄에 답을 출력한다.

예제 입력 1 
2
10
15
예제 출력 1 
20
*/


// 풀이
import java.util.*;
public class Main {

	public static void main(String[] args) {
		
        //----입력-------
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int rope[] = new int[N];
		for(int i=0; i<N; i++)
			rope[i] = sc.nextInt();
		//--------------
        
        // 병렬로 할 때 가장 좋은 방법은 가장 작은 힘을 들 수 있는 로프부터 올라가면서 (로프 무게 x 로프 수)이렇게 구하면 그 로프 이후로 가능한 모든 무게 찾기 가능
        // 따라서 이렇게 해서 맨 뒤까지 값을 구한 뒤 최대값을 하나씩 저장하면 된다.
		Arrays.sort(rope);
		
        // 저장될 최대값
		int max = 0;
        
		for(int i=0; i<N; i++)
		{
            // 현재 로프 감당 무게 x 무게 감당 가능한 모든 로프 구해서 그게 최대이면 갱신
			if(max < rope[i]*(N-i))
				max = rope[i]*(N-i);
		}
		
		int ans = max;
		System.out.println(ans);
	}

}
