/*
삼각 달팽이
문제 설명
정수 n이 매개변수로 주어집니다. 다음 그림과 같이 밑변의 길이와 높이가 n인 삼각형에서 맨 위 꼭짓점부터 반시계 방향으로 달팽이 채우기를 진행한 후, 첫 행부터 마지막 행까지 모두 순서대로 합친 새로운 배열을 return 하도록 solution 함수를 완성해주세요.

examples.png

제한사항
n은 1 이상 1,000 이하입니다.
입출력 예
n	result
4	[1,2,9,3,10,8,4,5,6,7]
5	[1,2,12,3,13,11,4,14,15,10,5,6,7,8,9]
6	[1,2,15,3,16,14,4,17,21,13,5,18,19,20,12,6,7,8,9,10,11]
입출력 예 설명
입출력 예 #1

문제 예시와 같습니다.
입출력 예 #2

문제 예시와 같습니다.
입출력 예 #3

문제 예시와 같습니다.
*/

// 풀이
class Solution {
    
    public int[] solution(int n) {
        // 전체 answer의 개수는 n~1까지의 합, 즉 n*(n+1)을 2로 나눈 값이다.
        int[] answer = new int[n*(n+1)/2];
        
        // col++을 처음에 진행하기 때문에 초기값을 0으로 세팅
        int col = -1;
        int row = 0;
        // 하나씩 더해가며 tri에 넣어줄 것이다.
        int count = 0;
        
        // 삼각형을 왼쪽으로 정렬시켜 직각삼각형으로 생각하고 문제를 푼다.
        int[][] tri = new int[n+1][n+1];
        
        // 왼쪽 아래 -> 오른쪽 -> 왼쪽 위 순서로 1씩 더해진다.
        // n=4로 예를들어 00 10 20 30 / 31 32 33 /  22 11 / 12 순서로 진행된다.
        // 즉 4번 왼쪽 아래, 3번 오른쪽, 2번 왼쪽 위 순서로 진행된다.
        // 두개의 for문을 각각 진행시키며 n번, n-1번, n-2번....으로 진행되게 한다.
        for(int i=0; i<n; i++)
            for(int j=n; j>i; j--)
            {   
                // 그리고 처음, 시작하는 경우는 n개의 경우이고 나머지가 0이 나오므로 tri의 column을 증가시켜준다.
                if(i%3==0)
                    col++;
                // 다음으로 n-1번 진행되는 경우 나머지는 1이고, tri의 row를 증가시켜준다.
                else if(i%3==1)
                    row++;
                // 세번째로 n-2번의 경우 나머지는 2이고 위, 왼쪽으로 이동시키기 때문에 둘 다 뺴준다.
                else
                {
                    col--;
                    row--;
                }
                // 다음 순서는 다시 나머지가 0이 나와 처음 것이 n-3.....로 진행될 것이다.
                // count는 하나씩 증가하며 tri에 넣어준다.
                count++;
                tri[col][row] = count;
            }
        
        // 결과값은 00 10 11 20 21 22...순서로 넣어준다.
        int anscount = 0;
        for(int i=0; i<n; i++)
            for(int j=0; j<=i; j++)
            {
                answer[anscount] = tri[i][j];
                anscount++;
            }
        
        
        return answer;
    }
}
