/*
요세푸스 문제 3 성공분류
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
1 초 (추가 시간 없음)	16 MB	1039	380	294	46.226%
문제
요세푸스 문제는 다음과 같다.

1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.

N과 K가 주어지면, 마지막으로 남는 사람의 번호를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N과 K가 빈 칸을 사이에 두고 순서대로 주어진다. (1 ≤ K ≤ N ≤ 5,000,000)

출력
첫째 줄에 마지막으로 남는 사람의 번호를 출력한다.

예제 입력 1 
7 3
예제 출력 1 
4
*/

// queue를 쓰면 간단하였는데, 3번 문제는 그 경우 메모리 초과가 나와서 다른 방법으로 구현해야 했다.
// 풀이
import java.util.*;

public class Main {
  public static void main(String[] args) {
    int ans = 0;
    Scanner sc = new Scanner(System.in);
    int N = sc.nextInt();
    int K = sc.nextInt();

    // 문제를 풀려면 다른 방법이 아니라 식을 써야한다.
    // 마지막에 집에 가는 사람을 구하면 되기 때문에 구현 식을 사용한다.
    // 마지막에 가는 사람은 집에 가는 순서 K만큼 하나씩 더하면서 진행하는데, N을 넘어가면 다시 되돌아온다.
    // 이를 구하는 방법은 i를 2부터 하나씩 증가시켜 가며 나누어 주면 된다.
    for(int i=2; i<=N; i++)
      ans = (ans+K) % i;

    System.out.println(ans+1);

  }
}
