/*
A → B 성공분류
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
2 초	512 MB	7233	3104	2475	41.555%
문제
정수 A를 B로 바꾸려고 한다. 가능한 연산은 다음과 같은 두 가지이다.

2를 곱한다.
1을 수의 가장 오른쪽에 추가한다. 
A를 B로 바꾸는데 필요한 연산의 최솟값을 구해보자.

입력
첫째 줄에 A, B (1 ≤ A < B ≤ 109)가 주어진다.

출력
A를 B로 바꾸는데 필요한 연산의 최솟값에 1을 더한 값을 출력한다. 만들 수 없는 경우에는 -1을 출력한다.

예제 입력 1 
2 162
예제 출력 1 
5
2 → 4 → 8 → 81 → 162

예제 입력 2 
4 42
예제 출력 2 
-1
예제 입력 3 
100 40021
예제 출력 3 
5
*/

// 풀이
import java.util.*;

public class Main {
	public static long A;
	public static long B;
  // ans는 먼저 큰 수로 해 두었다. 만약 TC가 1000이 넘어가면 에러날듯..
	public static long ans = 1000;
  // 답이 있는 경우 check는 true가 된다.
	public static boolean check = false;
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		A = sc.nextInt();
		B = sc.nextInt();
		
		DFS(A, 1);
		if(!check) ans = -1;
		System.out.println(ans);
	}
	
  // DFS진행
	public static void DFS(long num, int level) {
  // 원하는 숫자 B에 도달하면
		if(num == B) {
    // ans값은 최소의 연산이 되고 check가 true가 되며 더이상 진행하지 않는다.
			ans = Math.min(ans,  level);
			check = true;
			return;
		}
    // 값을 만들었을때 너무 커지면 그냥 나간다.
		if(num > B) {
			return;
		}
    // 1, 2번 케이스
		DFS(num*10+1, level+1);
		DFS(num*2, level+1);
	}
	
}
